<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | TechToy]]></title>
  <link href="http://ensonmj.github.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://ensonmj.github.com/"/>
  <updated>2012-05-31T19:47:43+08:00</updated>
  <id>http://ensonmj.github.com/</id>
  <author>
    <name><![CDATA[ensonmj]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[git-svn更新svn地址]]></title>
    <link href="http://ensonmj.github.com/blog/2012/05/31/git-svngeng-xin-svndi-zhi/"/>
    <updated>2012-05-31T19:33:00+08:00</updated>
    <id>http://ensonmj.github.com/blog/2012/05/31/git-svngeng-xin-svndi-zhi</id>
    <content type="html"><![CDATA[<p>今天一个项目的svn地址发生了变化，如果本地使用svn客户端，比如tortoise-svn，可以直接relocate更新地址，但我一直使用git-svn管理项目代码，这个变换svn地址可就没那么容易了。</p>

<p>网上搜了下，git的<a href="https://git.wiki.kernel.org/index.php/GitSvnSwitch">wiki</a>里面介绍了三种方法：第一种发送比较繁琐，但好像是使用最广泛的，因为好多搜索结果都是使用的此方法；第二种方法引自与<a href="http://translate.org.za/blogs/wynand/en/content/changing-your-svn-repository-address-git-svn-setup">winterstream's blog</a>；第三种方法一看也比较繁琐，最终决定使用第二种方法。</p>

<p>详细阅读了下winterstream的方法，具体步骤可以概括为三步：</p>

<!--more-->


<ol>
<li>使用<code>git-filter-branch</code>修改所有提交消息中的旧地址为新地址（git-svn-id那行记录）</li>
<li>删除.git/svn文件夹，下次使用<code>git svn rebase</code>更新代码时，会自动重建</li>
<li>编辑.git/config中的<code>svn-remote.svn.url</code>指向新地址</li>
</ol>


<p>其中第一步中<code>git-filter-branch</code>命令需要用到版本库所有的<code>refs</code>作为参数，winterstream使用的方法略显繁琐（优秀的程序员都是懒惰的，<sup>_<sup>)，其实可以有更简单的做法。</sup></sup></p>

<p>最终，我切换svn地址的整个操作流程如下：</p>

<ol>
<li><p>备份版本库，以防万一，毕竟是第一次尝试。</p>

<p> cp -r local-proj local-proj-bak</p></li>
<li><p>修改所有的提交消息（注意最后的参数）</p>

<p> git filter-branch --msg-filter 'sed "/s/older-url/new-url/g"' <strong>-- --all</strong></p></li>
<li><p>编辑.git/config文件，替换[svn-remote "svn"]中的url的值为新地址，保存退出。</p>

<p> git config -e</p></li>
<li><p>删除.git/svn文件夹</p>

<p> rm -rf .git/svn</p></li>
<li><p>更新代码，此步会自动生产.git/svn文件夹，当然用户名、密码需要重新填写以下。</p>

<p> git svn rebase</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git-svn 标准模式克隆的问题]]></title>
    <link href="http://ensonmj.github.com/blog/2012/05/29/git-svn-biao-zhun-mo-shi-ke-long-de-wen-ti/"/>
    <updated>2012-05-29T22:04:00+08:00</updated>
    <id>http://ensonmj.github.com/blog/2012/05/29/git-svn-biao-zhun-mo-shi-ke-long-de-wen-ti</id>
    <content type="html"><![CDATA[<p>公司采用svn托管代码，个人比较偏向于使用更加灵活的Git。由于项目代码包括windows客户端，linux后台，以及web客户端，很自然的形成三个文件夹：</p>

<pre><code>project/Trunk/windows  
project/Trunk/linux  
project/Trunk/web
project/Branches/V2/windows
project/Branches/V2/linux
project/Branches/V2/web
...
</code></pre>

<!--more-->


<p>本人目前主要负责windows客户端开发，对于其他两个文件夹下的代码不关心，所以以前克隆代码只克隆windows目录下的，一条命令搞定：</p>

<pre><code>git svn clone svn://server/repo/project/Trunk/windows
</code></pre>

<p>最近一直在阅读蒋鑫的《Git权威指南》,个人认为这应该算是国内关于Git写的做好的一本书了。书中也提到了<code>git-svn</code>克隆svn代码的一些细节。于是心血来潮，想照着书练习一下，练习对象自然就是项目代码了。</p>

<p>第一次我使用了这样一条命令：</p>

<pre><code>git svn clone svn://server/repo/project
</code></pre>

<p>克隆下载的代码组织方式很奇怪，看着很像svn的组织方式：</p>

<pre><code>project/Trunk/windows  
project/Trunk/linux  
project/Trunk/web
project/Branches/V2/windows
project/Branches/V2/linux
project/Branches/V2/web
...
</code></pre>

<p>使用<code>git branch -a</code>查看，只有一个默认的<code>master</code>分支。</p>

<p>于是又尝试其他的方式：</p>

<pre><code>git svn clone -s svn://server/repo/project
git svn clone svn://server/repo/project -T trunk -b branches -t tags
</code></pre>

<p>结果这两种写法的结果倒是很一致，就创建了个本地仓库，啥代码也没下下来。</p>

<p>最后采用下面的写法成功克隆了整个版本库（代码库大了，时间很长）:</p>

<pre><code>git svn clone svn://server/repo/project -T Trunk -b Branches -t Tags
</code></pre>

<p>对比一下就会发现区别仅在于大小写不一样。<code>git-svn</code>默认采用的小写字母开头的<code>trunk,branches,tags</code>，而公司代码库使用的是大写字母开头的<code>Trunk,Branches,Tags</code>，不知道svn关于这个是否有什么规定。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git历史搜索的各种方法]]></title>
    <link href="http://ensonmj.github.com/blog/2012/05/23/gitli-shi-sou-suo-de-ge-chong-fang-fa/"/>
    <updated>2012-05-23T20:09:00+08:00</updated>
    <id>http://ensonmj.github.com/blog/2012/05/23/gitli-shi-sou-suo-de-ge-chong-fang-fa</id>
    <content type="html"><![CDATA[<ul>
<li><p>搜索提交日志</p>

<p>  git log --grep</p></li>
</ul>


<p>示例</p>

<blockquote><p>$git log --oneline<br/>
939439b Update arch hdmi config<br/>
bda8277 add disqus<br/>
a128978 write a blog about hdmi audio in arch<br/>
9ae3805 modify path for articles</p>

<p>$git log --grep "arch hdmi"<br/>
commit 939439b3b011f05c7e86ab7efd38c67a6da3f4ad<br/>
Author: ensonmj <a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#x65;&#110;&#x73;&#x6f;&#x6e;&#109;&#106;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#109;">&#x65;&#x6e;&#x73;&#111;&#x6e;&#109;&#106;&#x40;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#111;&#x6d;</a><br/>
Date:   Mon May 14 20:49:32 2012 +0800</p>

<p>   Update arch hdmi config</p></blockquote>

<ul>
<li><p>搜索变动</p>

<p>  git log -S&lt; string ><br/>
  git log -G&lt; regex ></p></li>
</ul>


<p>示例</p>

<blockquote><p>$git log -G"Arch HDMI"<br/>
commit 939439b3b011f05c7e86ab7efd38c67a6da3f4ad<br/>
Author: ensonmj <a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#x3a;&#101;&#110;&#x73;&#x6f;&#110;&#x6d;&#x6a;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#x6d;">&#101;&#x6e;&#x73;&#111;&#x6e;&#x6d;&#106;&#x40;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a><br/>
Date:   Mon May 14 20:49:32 2012 +0800</p>

<p>   Update arch hdmi config</p>

<p>commit a1289784169fcba713c2fa5ad7a860f70e10f289<br/>
Author: ensonmj <a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#111;&#58;&#x65;&#110;&#x73;&#x6f;&#x6e;&#109;&#x6a;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#109;">&#101;&#x6e;&#115;&#111;&#x6e;&#x6d;&#106;&#x40;&#103;&#109;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;</a><br/>
Date:   Fri May 4 23:02:56 2012 +0800</p>

<p>   write a blog about hdmi audio in arch</p></blockquote>

<ul>
<li><p>搜索工作区</p>

<p>  git grep</p></li>
</ul>


<p>示例</p>

<blockquote><p>$git grep "Arch HDMI"<br/>
source/<em>posts/2012-05-04-arch-hdmi-sheng-yin-shu-chu.markdown:title: "Arch HDMI 声音输出"<br/>
source/</em>posts/2012-05-14-arch-hdmisheng-yin-shu-chu-(xu-).markdown:title: "Arch HDMI声音输出（续）"</p></blockquote>
]]></content>
  </entry>
  
</feed>
